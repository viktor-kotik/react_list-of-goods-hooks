{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","visibleGoods","useState","isReversed","setIsReversed","NONE","sortBy","setSortBy","ALPHABET","sort","LENGTH","good1","good2","length","reverse","className","onClick","type","classNames","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,mEAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAME,IAAME,EAAgB,WAC3B,IAAMC,EAAY,UAAOF,GACzB,EAAoCG,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA4BF,mBAASJ,EAASO,MAA9C,mBAAOC,EAAP,KAAeC,EAAf,KAqBA,OAdID,IAAWR,EAASU,UACtBP,EAAaQ,OAGXH,IAAWR,EAASY,QACtBT,EAAaQ,MAAK,SAACE,EAAOC,GACxB,OAAOD,EAAME,OAASD,EAAMC,UAI5BV,GACFF,EAAaa,UAIb,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMT,EAAUT,EAASU,WAClCS,KAAK,SACLF,UAAWG,IAAW,SAAU,UAC9B,CACE,WACEZ,IAAWR,EAASU,WAN5B,iCAYA,wBACEQ,QAAS,kBAAMT,EAAUT,EAASY,SAClCO,KAAK,SACLF,UAAWG,IAAW,SAAU,aAC9B,CACE,WACEZ,IAAWR,EAASY,SAN5B,4BAYA,wBACEM,QAAS,kBAAMZ,GAAeD,IAC9Bc,KAAK,SACLF,UAAWG,IAAW,SAAU,aAC9B,CACE,YACiB,IAAff,IANR,sBAaGG,IAAWR,EAASO,OAAuB,IAAfF,IAE3B,wBACEa,QA9DZ,WACEZ,GAAc,GACdG,EAAUT,EAASO,OA6DTY,KAAK,SACLF,UAAU,4BAHZ,sBAWN,6BACGd,EAAakB,KAAI,SAAAC,GAAI,OAAI,oBAAI,UAAQ,OAAZ,SAAoBA,aCnGtDC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.7703c329.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\nexport const App: React.FC = () => {\n  const visibleGoods = [...goodsFromServer];\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortBy, setSortBy] = useState(SortType.NONE);\n\n  function reset() {\n    setIsReversed(false);\n    setSortBy(SortType.NONE);\n  }\n\n  if (sortBy === SortType.ALPHABET) {\n    visibleGoods.sort();\n  }\n\n  if (sortBy === SortType.LENGTH) {\n    visibleGoods.sort((good1, good2) => {\n      return good1.length - good2.length;\n    });\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => setSortBy(SortType.ALPHABET)}\n          type=\"button\"\n          className={classNames('button', 'is-info',\n            {\n              'is-light':\n                sortBy !== SortType.ALPHABET,\n            })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setSortBy(SortType.LENGTH)}\n          type=\"button\"\n          className={classNames('button', 'is-success',\n            {\n              'is-light':\n                sortBy !== SortType.LENGTH,\n            })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => setIsReversed(!isReversed)}\n          type=\"button\"\n          className={classNames('button', 'is-warning',\n            {\n              'is-light':\n                isReversed === false,\n            })}\n        >\n          Reverse\n        </button>\n\n        {\n          (sortBy !== SortType.NONE || isReversed === true)\n          && (\n            <button\n              onClick={reset}\n              type=\"button\"\n              className=\"button is-danger is-light\"\n            >\n              Reset\n            </button>\n          )\n        }\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => <li data-cy=\"Good\">{good}</li>)}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}